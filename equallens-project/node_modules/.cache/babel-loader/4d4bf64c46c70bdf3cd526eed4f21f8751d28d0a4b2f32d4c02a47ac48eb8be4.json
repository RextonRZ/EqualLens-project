{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruizh\\\\OneDrive\\\\Desktop\\\\EqualLens-project-1\\\\equallens-project\\\\src\\\\components\\\\pages\\\\UploadCV.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo, useReducer } from \"react\";\nimport \"./UploadCV.css\";\nimport \"../pageloading.css\"; // Import the loading animation CSS\n\n// File upload reducer to manage file upload state more efficiently\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fileUploadReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_FILES':\n      return {\n        ...state,\n        selectedFiles: action.payload.updatedFiles,\n        uploadQueue: action.payload.newQueue,\n        processingFiles: true\n      };\n    case 'FILE_PROGRESS':\n      return {\n        ...state,\n        uploadProgress: {\n          ...state.uploadProgress,\n          [action.payload.fileName]: action.payload.progress\n        }\n      };\n    case 'PROCESS_NEXT':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'FILE_COMPLETE':\n      return {\n        ...state,\n        uploadQueue: state.uploadQueue.slice(1)\n      };\n    case 'QUEUE_COMPLETE':\n      return {\n        ...state,\n        isLoading: false,\n        processingFiles: false\n      };\n    case 'REMOVE_FILE':\n      const fileToRemove = state.selectedFiles[action.payload.index];\n      return {\n        ...state,\n        selectedFiles: state.selectedFiles.filter((_, i) => i !== action.payload.index),\n        uploadQueue: fileToRemove ? state.uploadQueue.filter(queueFile => queueFile.name !== fileToRemove.name) : state.uploadQueue,\n        uploadProgress: fileToRemove ?\n        // Remove the progress entry for this file\n        Object.fromEntries(Object.entries(state.uploadProgress).filter(([key]) => key !== fileToRemove.name)) : state.uploadProgress\n      };\n    case 'RESET':\n      return {\n        selectedFiles: [],\n        isLoading: false,\n        uploadProgress: {},\n        uploadQueue: [],\n        processingFiles: false\n      };\n    default:\n      return state;\n  }\n};\nconst UploadCV = () => {\n  _s();\n  // Use reducer for file upload state management\n  const [fileState, fileDispatch] = useReducer(fileUploadReducer, {\n    selectedFiles: [],\n    isLoading: false,\n    uploadProgress: {},\n    uploadQueue: [],\n    processingFiles: false\n  });\n  const [currentStep, setCurrentStep] = useState(\"jobDetails\"); // \"jobDetails\" or \"uploadCV\"\n  const [jobData, setJobData] = useState(null); // To store submitted job details\n\n  // Add API state variables\n  const [apiStatus, setApiStatus] = useState(\"idle\"); // idle, loading, success, error\n  const [submitProgress, setSubmitProgress] = useState(0); // Track overall submission progress\n\n  const [isDragging, setIsDragging] = useState(false);\n  const fileInputRef = useRef(null);\n  const uploadContainerRef = useRef(null);\n\n  // Create animation frame reference at the component level\n  const progressAnimationRef = useRef(null);\n\n  // Job details state\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobTitleSuggestions, setJobTitleSuggestions] = useState([]);\n  const [showJobTitleSuggestions, setShowJobTitleSuggestions] = useState(false);\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [departments, setDepartments] = useState([]);\n  const [departmentInput, setDepartmentInput] = useState(\"\");\n  const [departmentSuggestions, setDepartmentSuggestions] = useState([]);\n  const [showDepartmentSuggestions, setShowDepartmentSuggestions] = useState(false);\n  const [minimumCGPA, setMinimumCGPA] = useState(2.50);\n  const [cgpaInputValue, setCgpaInputValue] = useState(\"2.50\");\n  const [cgpaError, setCgpaError] = useState(false);\n  const [skillInput, setSkillInput] = useState(\"\");\n  const [skillSuggestions, setSkillSuggestions] = useState([]);\n  const [showSkillSuggestions, setShowSkillSuggestions] = useState(false);\n  const [skills, setSkills] = useState([]);\n\n  // Sample data for suggestions - wrapped in useMemo to avoid recreation on each render\n  const jobTitleOptions = useMemo(() => [\"Software Engineer\", \"Data Scientist\", \"Project Manager\", \"Web Developer\", \"UI/UX Designer\", \"Product Manager\", \"DevOps Engineer\", \"Systems Analyst\", \"Frontend Developer\", \"Backend Developer\", \"Full Stack Developer\", \"Machine Learning Engineer\", \"Business Analyst\", \"Quality Assurance Engineer\"], []);\n  const departmentOptions = useMemo(() => [\"Engineering\", \"Information Technology\", \"Marketing\", \"Finance\", \"Human Resources\", \"Sales\", \"Operations\", \"Customer Support\", \"Research & Development\", \"Legal\", \"Administration\", \"Design\", \"Product Management\", \"Business Development\", \"Data Science\"], []);\n  const skillsOptions = useMemo(() => [\"JavaScript\", \"Python\", \"Java\", \"React\", \"Node.js\", \"SQL\", \"AWS\", \"Docker\", \"DevOps\", \"Machine Learning\", \"Data Analysis\", \"Agile\", \"Scrum\", \"Project Management\", \"UI/UX Design\", \"TypeScript\", \"Go\", \"Ruby\", \"Communication\", \"Leadership\", \"Problem Solving\", \"C#\", \"PHP\", \"Angular\", \"Vue.js\", \"MongoDB\", \"GraphQL\", \"REST API\", \"Git\"], []);\n\n  // Filter suggestions based on input\n  useEffect(() => {\n    if (jobTitle) {\n      const filtered = jobTitleOptions.filter(option => option.toLowerCase().includes(jobTitle.toLowerCase()) // Case-insensitive search\n      );\n      setJobTitleSuggestions(filtered);\n      setShowJobTitleSuggestions(filtered.length > 0);\n    } else {\n      setShowJobTitleSuggestions(false);\n    }\n  }, [jobTitle, jobTitleOptions]);\n  useEffect(() => {\n    if (departmentInput) {\n      const filtered = departmentOptions.filter(option => option.toLowerCase().includes(departmentInput.toLowerCase()));\n      setDepartmentSuggestions(filtered);\n      setShowDepartmentSuggestions(filtered.length > 0);\n    } else {\n      setShowDepartmentSuggestions(false);\n    }\n  }, [departmentInput, departmentOptions]);\n  useEffect(() => {\n    if (skillInput) {\n      const filtered = skillsOptions.filter(option => option.toLowerCase().includes(skillInput.toLowerCase()));\n      setSkillSuggestions(filtered);\n      setShowSkillSuggestions(filtered.length > 0);\n    } else {\n      setShowSkillSuggestions(false);\n    }\n  }, [skillInput, skillsOptions]);\n\n  // Selectors for job title and skills\n  const handleJobTitleSelect = selected => {\n    setJobTitle(selected);\n    setShowJobTitleSuggestions(false);\n  };\n  const handleSkillSelect = selected => {\n    if (!skills.includes(selected)) {\n      setSkills([...skills, selected]);\n    }\n    setSkillInput(\"\");\n    setShowSkillSuggestions(false);\n  };\n\n  // Close suggestions when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (!event.target.closest('.suggestion-container')) {\n        setShowJobTitleSuggestions(false);\n        setShowSkillSuggestions(false);\n        setShowDepartmentSuggestions(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Process files and add to queue - optimized with useCallback and useReducer\n  const processFiles = useCallback(files => {\n    // If already processing files, don't allow new uploads\n    if (fileState.isLoading || fileState.processingFiles) {\n      alert(\"Please wait for the current file to complete uploading before adding new files.\");\n      return;\n    }\n    let updatedFiles = [...fileState.selectedFiles];\n    let newFiles = [];\n\n    // Process all files but upload one at a time\n    for (const fileToProcess of files) {\n      // Check file format\n      const extension = fileToProcess.name.split('.').pop().toLowerCase();\n      const validExtensions = ['pdf', 'doc', 'docx'];\n      if (!validExtensions.includes(extension)) {\n        alert(`${fileToProcess.name} is not a supported file type. Please upload PDF, DOC, or DOCX files only.`);\n        continue;\n      }\n\n      // Check if file with same name exists - log for debugging\n      console.log(\"Checking for duplicate file:\", fileToProcess.name);\n      const existingIndex = updatedFiles.findIndex(file => file.name === fileToProcess.name);\n      console.log(\"Existing file index:\", existingIndex);\n      if (existingIndex !== -1) {\n        // We need to use a synchronous approach here since we're in a loop\n        const confirmReplace = window.confirm(`A file named \"${fileToProcess.name}\" already exists. Do you want to replace it?`);\n        if (confirmReplace) {\n          console.log(\"Replacing file:\", fileToProcess.name);\n          // Replace the file in our updated array\n          updatedFiles[existingIndex] = fileToProcess;\n\n          // Mark this file to be added to the queue\n          newFiles.push(fileToProcess);\n        }\n      } else {\n        console.log(\"Adding new file:\", fileToProcess.name);\n        // New file, add it to both arrays\n        updatedFiles.push(fileToProcess);\n        newFiles.push(fileToProcess);\n      }\n    }\n    if (newFiles.length > 0) {\n      console.log(\"New files to process:\", newFiles.map(f => f.name));\n      // Filter out any files from the queue that are being replaced\n      const newQueue = [...fileState.uploadQueue.filter(queueFile => !newFiles.some(newFile => newFile.name === queueFile.name)), ...newFiles];\n      console.log(\"New upload queue:\", newQueue.map(f => f.name));\n      fileDispatch({\n        type: 'ADD_FILES',\n        payload: {\n          updatedFiles,\n          newQueue\n        }\n      });\n    }\n  }, [fileState.selectedFiles, fileState.isLoading, fileState.processingFiles, fileState.uploadQueue]);\n\n  // Process upload queue sequentially\n  useEffect(() => {\n    if (fileState.uploadQueue.length === 0) {\n      if (fileState.processingFiles) {\n        fileDispatch({\n          type: 'QUEUE_COMPLETE'\n        });\n      }\n      return;\n    }\n\n    // Process one file at a time\n    const processNextFile = async () => {\n      fileDispatch({\n        type: 'PROCESS_NEXT'\n      });\n      const fileToProcess = fileState.uploadQueue[0];\n\n      // Initialize progress for this file\n      fileDispatch({\n        type: 'FILE_PROGRESS',\n        payload: {\n          fileName: fileToProcess.name,\n          progress: 0\n        }\n      });\n\n      // Simulate upload for current file\n      await new Promise(resolve => {\n        let progress = 0;\n        const interval = setInterval(() => {\n          progress += Math.random() * 15;\n          if (progress > 100) progress = 100;\n          fileDispatch({\n            type: 'FILE_PROGRESS',\n            payload: {\n              fileName: fileToProcess.name,\n              progress: Math.floor(progress)\n            }\n          });\n          if (progress === 100) {\n            clearInterval(interval);\n            setTimeout(() => {\n              resolve();\n            }, 500);\n          }\n        }, 200);\n      });\n\n      // Remove processed file from queue\n      fileDispatch({\n        type: 'FILE_COMPLETE'\n      });\n    };\n    processNextFile();\n  }, [fileState.uploadQueue, fileState.processingFiles]);\n  useEffect(() => {\n    const uploadContainer = uploadContainerRef.current;\n    if (uploadContainer) {\n      const handleLocalDragOver = event => {\n        event.preventDefault();\n        uploadContainer.classList.add('dragover');\n      };\n      const handleLocalDragLeave = () => {\n        uploadContainer.classList.remove('dragover');\n      };\n      const handleLocalDrop = () => {\n        uploadContainer.classList.remove('dragover');\n      };\n      uploadContainer.addEventListener('dragover', handleLocalDragOver);\n      uploadContainer.addEventListener('dragleave', handleLocalDragLeave);\n      uploadContainer.addEventListener('drop', handleLocalDrop);\n      return () => {\n        uploadContainer.removeEventListener('dragover', handleLocalDragOver);\n        uploadContainer.removeEventListener('dragleave', handleLocalDragLeave);\n        uploadContainer.removeEventListener('drop', handleLocalDrop);\n      };\n    }\n  }, []);\n  useEffect(() => {\n    // Only add document-level event listeners when on the upload CV page\n    if (currentStep !== \"uploadCV\") return;\n    const handleDocumentDragOver = event => {\n      event.preventDefault();\n      if (!isDragging && !fileState.isLoading && !fileState.processingFiles) {\n        setIsDragging(true);\n      }\n    };\n    const handleDocumentDragLeave = event => {\n      event.preventDefault();\n      if (event.clientX <= 0 || event.clientY <= 0 || event.clientX >= window.innerWidth || event.clientY >= window.innerHeight) {\n        setIsDragging(false);\n      }\n    };\n    const handleDocumentDrop = event => {\n      event.preventDefault();\n      setIsDragging(false);\n\n      // Prevent file drop during loading\n      if (fileState.isLoading || fileState.processingFiles) {\n        alert(\"Please wait for the current file to complete uploading before adding new files.\");\n        return;\n      }\n      const files = Array.from(event.dataTransfer.files);\n      if (files.length > 0) {\n        processFiles(files);\n      }\n    };\n    document.addEventListener('dragover', handleDocumentDragOver);\n    document.addEventListener('dragleave', handleDocumentDragLeave);\n    document.addEventListener('drop', handleDocumentDrop);\n    return () => {\n      document.removeEventListener('dragover', handleDocumentDragOver);\n      document.removeEventListener('dragleave', handleDocumentDragLeave);\n      document.removeEventListener('drop', handleDocumentDrop);\n    };\n  }, [isDragging, processFiles, fileState.isLoading, fileState.processingFiles, currentStep]); // Add currentStep to dependencies\n\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files);\n    if (files.length > 0) {\n      processFiles(files);\n      // Reset the file input so the same file can be selected again\n      event.target.value = '';\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    // Only show dragover effect if not currently loading\n    if (!fileState.isLoading && !fileState.processingFiles) {\n      event.dataTransfer.dropEffect = 'copy';\n    } else {\n      // Use 'none' to indicate dropping is not allowed\n      event.dataTransfer.dropEffect = 'none';\n    }\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    setIsDragging(false);\n\n    // Prevent file drop during loading\n    if (fileState.isLoading || fileState.processingFiles) {\n      alert(\"Please wait for the current file to complete uploading before adding new files.\");\n      return;\n    }\n    const files = Array.from(event.dataTransfer.files);\n    if (files.length > 0) {\n      processFiles(files);\n    }\n  };\n\n  // Add this function to fix the error\n  const handleFileInputKeyDown = e => {\n    // Activate file input on Enter or Space\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      fileInputRef.current.click();\n    }\n  };\n\n  // Improved file remove function using reducer\n  const removeFile = index => {\n    fileDispatch({\n      type: 'REMOVE_FILE',\n      payload: {\n        index\n      }\n    });\n  };\n  const handleChooseFile = () => {\n    fileInputRef.current.click();\n  };\n  const getFileIcon = fileName => {\n    const extension = fileName.split('.').pop().toLowerCase();\n    switch (extension) {\n      case 'pdf':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-icon pdf-icon\",\n          children: \"PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 24\n        }, this);\n      case 'doc':\n      case 'docx':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-icon doc-icon\",\n          children: \"DOC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-icon default-icon\",\n          children: \"FILE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  const getFullPageOverlay = () => {\n    if (!isDragging) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullpage-drop-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-icon-large pdf-icon-large\",\n            children: \"FILE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 25\n          }, this), fileState.selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"copy-badge\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"drop-title\",\n          children: \"Drop files anywhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"drop-subtitle\",\n          children: \"Drop file(s) to upload it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Job details handlers\n  const handleAddSkill = () => {\n    if (skillInput.trim() && !skills.includes(skillInput.trim())) {\n      setSkills([...skills, skillInput.trim()]);\n      setSkillInput(\"\");\n    }\n  };\n  const removeSkill = skill => {\n    setSkills(skills.filter(s => s !== skill));\n  };\n  const handleSkillKeyPress = e => {\n    if (e.key === 'Enter' && skillInput.trim()) {\n      e.preventDefault();\n      handleAddSkill();\n    }\n  };\n\n  // Department handlers\n  const handleDepartmentSelect = department => {\n    if (!departments.includes(department)) {\n      setDepartments([...departments, department]);\n    }\n    setDepartmentInput(\"\");\n    setShowDepartmentSuggestions(false);\n  };\n  const handleAddDepartment = () => {\n    if (departmentInput.trim() && !departments.includes(departmentInput.trim())) {\n      setDepartments([...departments, departmentInput.trim()]);\n      setDepartmentInput(\"\");\n    }\n  };\n  const handleDepartmentKeyPress = e => {\n    if (e.key === 'Enter' && departmentInput.trim()) {\n      e.preventDefault();\n      handleAddDepartment();\n    }\n  };\n  const removeDepartment = department => {\n    setDepartments(departments.filter(dept => dept !== department));\n  };\n  const validateForm = () => {\n    if (!jobTitle.trim()) {\n      alert(\"Job Title is required\");\n      return false;\n    }\n    if (skills.length === 0) {\n      alert(\"At least one Required Skill is required\");\n      return false;\n    }\n    return true;\n  };\n\n  // When submitting the form, make sure we're using requiredSkills consistently\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      // Save job details and move to next step\n      const jobDetails = {\n        jobTitle,\n        jobDescription,\n        departments,\n        minimumCGPA,\n        skills: skills,\n        // Keep skills field for backward compatibility\n        requiredSkills: skills // Add requiredSkills explicitly for API consistency\n      };\n      console.log(\"Job details saved:\", jobDetails);\n      setJobData(jobDetails);\n      setCurrentStep(\"uploadCV\");\n\n      // Scroll to top of the page\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  // Add handler for going back to job details\n  const handleBackToJobDetails = () => {\n    setCurrentStep(\"jobDetails\");\n    // Scroll to top of the page\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    // Reapply slider fill percentage to fix CGPA slider color issue\n    setTimeout(() => {\n      updateSliderPercentage(minimumCGPA);\n    }, 100);\n  };\n\n  // API URL for backend\n  const API_URL = \"http://localhost:8000\"; // Your FastAPI URL\n  const API_ENDPOINT = `${API_URL}/api/jobs/upload-job`; // Ensure the correct endpoint is used\n  const UPLOAD_MORE_CV_ENDPOINT = `${API_URL}/api/jobs/upload-more-cv`; // Add endpoint for upload-more-cv\n\n  // Clean up animation frame on component unmount\n  useEffect(() => {\n    return () => {\n      if (progressAnimationRef.current) {\n        cancelAnimationFrame(progressAnimationRef.current);\n        progressAnimationRef.current = null;\n      }\n    };\n  }, []);\n\n  // Updated LoadingAnimation component with cleaner structure\n  const LoadingAnimation = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seesaw-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ball\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Add state for managing success and error modals\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // Success Modal Component with improved accessibility\n  const SuccessModal = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status-modal-overlay\",\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-labelledby\": \"success-modal-title\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-modal success-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-icon success-icon\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M22 11.08V12a10 10 0 1 1-5.93-9.14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n            points: \"22 4 12 14.01 9 11.01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"success-modal-title\",\n        className: \"status-title\",\n        children: \"Submission Complete!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-description\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Your files have been uploaded successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"status-button secondary-button\",\n          onClick: handleCreateMoreJob,\n          children: \"Create More Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"status-button primary-button\",\n          onClick: handleGoToDashboard,\n          autoFocus: true,\n          children: \"Go to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 606,\n    columnNumber: 9\n  }, this);\n\n  // Error Modal Component with improved accessibility\n  const ErrorModal = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status-modal-overlay\",\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-labelledby\": \"error-modal-title\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-modal error-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-icon error-icon\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"15\",\n            y1: \"9\",\n            x2: \"9\",\n            y2: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"9\",\n            y1: \"9\",\n            x2: \"15\",\n            y2: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"error-modal-title\",\n        className: \"status-title\",\n        children: \"Submission Failed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: errorMessage || \"Please try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"status-button primary-button\",\n          onClick: handleTryAgain,\n          autoFocus: true,\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 644,\n    columnNumber: 9\n  }, this);\n\n  // Button action handlers with full reset\n  // const handleUploadMoreJobs = () => {\n  //     // Reset all form and file states\n  //     setCurrentStep(\"jobDetails\");\n  //     setJobTitle(\"\");\n  //     setJobDescription(\"\");\n  //     setDepartments([]);\n  //     setMinimumCGPA(2.50);\n  //     setSkills([]);\n  //     setJobData(null);\n  //     fileDispatch({ type: 'RESET' });\n  //     setApiStatus(\"idle\");\n  //     setSubmitProgress(0);\n  //     setShowSuccessModal(false);\n  // };\n\n  const handleGoToDashboard = () => {\n    // Close the modal first\n    setShowSuccessModal(false);\n\n    // Navigate to dashboard page\n    window.location.href = \"/dashboard\";\n\n    // If you're using React Router, you could use navigate instead:\n    // navigate(\"/dashboard\");\n  };\n  const handleTryAgain = () => {\n    setShowErrorModal(false);\n    // Reset API state for retrying\n    setApiStatus(\"idle\");\n    setSubmitProgress(0);\n  };\n\n  // Update the handleFinalSubmit function to use modals instead of alerts\n  const handleFinalSubmit = async () => {\n    if (!fileState.selectedFiles || fileState.selectedFiles.length === 0) {\n      setErrorMessage(\"Please upload at least one CV file\");\n      setShowErrorModal(true);\n      return;\n    }\n    try {\n      // Cancel any existing animation frame\n      if (progressAnimationRef.current) {\n        cancelAnimationFrame(progressAnimationRef.current);\n        progressAnimationRef.current = null;\n      }\n      setApiStatus(\"loading\");\n      setSubmitProgress(0); // Start with 0% progress \n\n      // Add a small delay to ensure loading animation starts properly\n      await new Promise(resolve => setTimeout(resolve, 400));\n\n      // Create form data with both skills and requiredSkills fields\n      const formData = new FormData();\n\n      // Add job data as JSON string with both field names to ensure compatibility\n      const submissionData = {\n        ...jobData,\n        // Ensure both field names are present\n        skills: jobData.skills || [],\n        requiredSkills: jobData.requiredSkills || jobData.skills || []\n      };\n      formData.append(\"job_data\", JSON.stringify(submissionData));\n\n      // Add all files\n      fileState.selectedFiles.forEach(file => {\n        formData.append(\"files\", file);\n      });\n\n      // Simulate early progress before actual upload starts\n      setSubmitProgress(7);\n      await new Promise(resolve => setTimeout(resolve, 2750));\n      setSubmitProgress(16);\n      await new Promise(resolve => setTimeout(resolve, 5450));\n\n      // Simulate some more progress before sending\n      setSubmitProgress(30);\n      await new Promise(resolve => setTimeout(resolve, 5450));\n      setSubmitProgress(65);\n\n      // Function to simulate progress during waiting time - use requestAnimationFrame for smoother updates\n      let lastUpdateTime = Date.now();\n      const simulateProgress = () => {\n        if (apiStatus !== \"loading\") return; // Stop if no longer loading\n\n        const now = Date.now();\n        // Only update every 800ms to reduce rendering load\n        if (now - lastUpdateTime >= 800) {\n          setSubmitProgress(prev => {\n            const newProgress = prev + Math.random() * 1.5;\n            return Math.min(newProgress, 90);\n          });\n          lastUpdateTime = now;\n        }\n        progressAnimationRef.current = requestAnimationFrame(simulateProgress);\n      };\n\n      // Start progress simulation with requestAnimationFrame\n      progressAnimationRef.current = requestAnimationFrame(simulateProgress);\n\n      // Send to backend API\n      const response = await fetch(API_ENDPOINT, {\n        method: 'POST',\n        body: formData\n      });\n\n      // Clear the progress simulation\n      if (progressAnimationRef.current) {\n        cancelAnimationFrame(progressAnimationRef.current);\n        progressAnimationRef.current = null;\n      }\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({\n          error: \"Unknown error\"\n        }));\n        throw new Error(`Server responded with ${response.status}: ${errorData.detail || errorData.error || errorData.message || (await response.text())}`);\n      }\n      const responseData = await response.json();\n      console.log(\"Server response:\", responseData);\n\n      // Set the final progress based on response (or 100 if not provided)\n      setSubmitProgress(responseData.progress || 100);\n\n      // Add a delay to ensure animation completes nicely\n      setTimeout(() => {\n        setApiStatus(\"success\");\n        setShowSuccessModal(true);\n      }, 1000);\n    } catch (error) {\n      // Clear animation frame in case of error too\n      if (progressAnimationRef.current) {\n        cancelAnimationFrame(progressAnimationRef.current);\n        progressAnimationRef.current = null;\n      }\n      console.error(\"Error submitting job:\", error);\n      setApiStatus(\"error\");\n      setErrorMessage(error.message || \"Error submitting job. Please try again.\");\n      setShowErrorModal(true);\n\n      // Reset API status after a short delay\n      setTimeout(() => {\n        setApiStatus(\"idle\");\n        setSubmitProgress(0);\n      }, 1000);\n    }\n  };\n\n  // Handle direct CGPA input\n  const handleCGPAInputChange = e => {\n    const inputValue = e.target.value;\n\n    // Allow empty field while typing\n    if (inputValue === \"\") {\n      setCgpaInputValue(\"\");\n      setCgpaError(true);\n      return;\n    }\n\n    // Only allow numeric input with decimal point\n    if (!/^\\d*\\.?\\d*$/.test(inputValue)) {\n      return;\n    }\n    setCgpaInputValue(inputValue);\n\n    // Validate the input value\n    const numValue = parseFloat(inputValue);\n    if (!isNaN(numValue) && numValue >= 0 && numValue <= 4) {\n      setMinimumCGPA(numValue);\n      setCgpaError(false);\n      // Update the slider's fill percentage for direct input\n      updateSliderPercentage(numValue);\n    } else {\n      setCgpaError(true);\n    }\n  };\n\n  // Handle when input field loses focus\n  const handleCGPABlur = () => {\n    // If the input is invalid or empty, reset to the current valid CGPA\n    if (cgpaError || cgpaInputValue === \"\") {\n      setCgpaInputValue(minimumCGPA.toFixed(2));\n      setCgpaError(false);\n    }\n    // Format the value with 2 decimal places when focus is lost\n    else {\n      setCgpaInputValue(parseFloat(cgpaInputValue).toFixed(2));\n    }\n  };\n\n  // Update input value when slider changes\n  const handleCGPASliderChange = e => {\n    const newValue = parseFloat(e.target.value);\n    setMinimumCGPA(newValue);\n    setCgpaInputValue(newValue.toFixed(2));\n    setCgpaError(false);\n\n    // Update the slider's fill percentage\n    updateSliderPercentage(newValue);\n  };\n\n  // Helper function to update the slider fill percentage CSS variable\n  const updateSliderPercentage = value => {\n    // Calculate percentage (value from 0-4 to 0-100%)\n    const percentage = value / 4 * 100;\n    // Find the slider element and update its CSS variable\n    const sliderElement = document.getElementById('cgpa');\n    if (sliderElement) {\n      sliderElement.style.setProperty('--slider-percentage', `${percentage}%`);\n    }\n  };\n\n  // Initialize the slider percentage when component mounts\n  useEffect(() => {\n    updateSliderPercentage(minimumCGPA);\n  }, [minimumCGPA]);\n\n  // Add auto-resize function for the job description textarea\n  const handleJobDescriptionInput = e => {\n    e.target.style.height = \"auto\";\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  };\n\n  // Add this new function for creating more jobs\n  const handleCreateMoreJob = () => {\n    // Reset the form and navigate back to job details\n    setCurrentStep(\"jobDetails\");\n    setJobTitle(\"\");\n    setJobDescription(\"\");\n    setDepartments([]);\n    setMinimumCGPA(2.50);\n    setSkills([]);\n    setJobData(null);\n    fileDispatch({\n      type: 'RESET'\n    });\n    setApiStatus(\"idle\");\n    setSubmitProgress(0);\n    setShowSuccessModal(false);\n  };\n\n  // Example usage for upload-more-cv\n  const handleUploadMoreCV = async (jobId, files) => {\n    const formData = new FormData();\n    formData.append(\"job_id\", jobId);\n    files.forEach(file => formData.append(\"files\", file));\n    try {\n      const response = await fetch(UPLOAD_MORE_CV_ENDPOINT, {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}: ${await response.text()}`);\n      }\n      const data = await response.json();\n      console.log(\"Upload more CV response:\", data);\n    } catch (error) {\n      console.error(\"Error uploading more CVs:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [getFullPageOverlay(), apiStatus === \"loading\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"api-loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Submitting job and uploading files...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${submitProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-text\",\n            children: [Math.round(submitProgress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 17\n    }, this), showSuccessModal && /*#__PURE__*/_jsxDEV(SuccessModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 34\n    }, this), showErrorModal && /*#__PURE__*/_jsxDEV(ErrorModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 32\n    }, this), currentStep === \"jobDetails\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"job-title-header\",\n        children: \"Create New Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"jobTitle\",\n            className: \"form-label\",\n            children: [\"Job Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 88\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"jobTitle\",\n              className: \"form-input\",\n              value: jobTitle,\n              onChange: e => setJobTitle(e.target.value),\n              placeholder: \"Enter job title\",\n              required: true,\n              onBlur: () => {\n                // Hide suggestions with a small delay to allow click event to complete\n                setTimeout(() => {\n                  setShowJobTitleSuggestions(false);\n                }, 200);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 33\n            }, this), showJobTitleSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"suggestions-list\",\n              children: jobTitleSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onMouseDown: e => {\n                  e.preventDefault(); // Prevent input blur before click\n                  handleJobTitleSelect(suggestion);\n                },\n                children: suggestion\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"jobDescription\",\n            className: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"jobDescription\",\n            className: \"form-textarea\",\n            value: jobDescription,\n            onChange: e => setJobDescription(e.target.value),\n            onInput: handleJobDescriptionInput // Added auto-resize handler\n            ,\n            placeholder: \"Enter job description\",\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"department\",\n            className: \"form-label\",\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"department\",\n                className: \"form-input\",\n                value: departmentInput,\n                onChange: e => setDepartmentInput(e.target.value),\n                onKeyPress: handleDepartmentKeyPress,\n                placeholder: \"Enter a department\",\n                onBlur: () => {\n                  // Hide suggestions with a small delay to allow click event to complete\n                  setTimeout(() => {\n                    setShowDepartmentSuggestions(false);\n                  }, 200);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-button\",\n                onClick: handleAddDepartment,\n                disabled: !departmentInput.trim(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1046,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 33\n            }, this), showDepartmentSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"suggestions-list\",\n              children: departmentSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onMouseDown: e => {\n                  e.preventDefault(); // Prevent input blur before click\n                  handleDepartmentSelect(suggestion);\n                },\n                children: suggestion\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 29\n          }, this), departments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tags-container\",\n            children: departments.map((department, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag\",\n              children: [department, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"tag-remove\",\n                onClick: () => removeDepartment(department),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1076,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cgpa\",\n            className: \"form-label\",\n            children: \"Minimum CGPA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cgpa-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"cgpa\",\n              min: \"0\",\n              max: \"4\",\n              step: \"0.01\",\n              value: minimumCGPA,\n              onChange: handleCGPASliderChange,\n              className: \"cgpa-slider\",\n              \"aria-valuemin\": \"0\",\n              \"aria-valuemax\": \"4\",\n              \"aria-valuenow\": minimumCGPA,\n              \"aria-labelledby\": \"cgpa-value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"cgpa-value\",\n              type: \"text\",\n              className: `cgpa-value ${cgpaError ? 'error' : ''}`,\n              value: cgpaInputValue,\n              onChange: handleCGPAInputChange,\n              onBlur: handleCGPABlur,\n              \"aria-label\": \"CGPA value\",\n              \"aria-invalid\": cgpaError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 29\n          }, this), cgpaError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            role: \"alert\",\n            children: \"Please enter a valid CGPA between 0 and 4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"skills\",\n            className: \"form-label\",\n            children: [\"Required Skills \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 92\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"skills\",\n                className: \"form-input\",\n                value: skillInput,\n                onChange: e => setSkillInput(e.target.value),\n                onKeyPress: handleSkillKeyPress,\n                placeholder: \"Enter a skill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1128,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"add-button\",\n                onClick: handleAddSkill,\n                disabled: !skillInput.trim(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 33\n            }, this), showSkillSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"suggestions-list\",\n              children: skillSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => handleSkillSelect(suggestion),\n                children: suggestion\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1147,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 29\n          }, this), skills.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tags-container\",\n            children: skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag\",\n              children: [skill, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"tag-remove\",\n                onClick: () => removeSkill(skill),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1164,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1162,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1160,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-nav\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBackToJobDetails,\n            className: \"back-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"back-icon\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M15 19l-7-7 7-7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1188,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1187,\n              columnNumber: 33\n            }, this), \"Back to Job Details\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"job-title-header\",\n          children: [\"Upload Candidate CVs for \", jobData === null || jobData === void 0 ? void 0 : jobData.jobTitle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        ref: uploadContainerRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-dropzone-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `upload-dropzone ${fileState.isLoading || fileState.processingFiles ? 'disabled-dropzone' : ''}`,\n              onDragOver: handleDragOver,\n              onDrop: handleDrop,\n              role: \"button\",\n              tabIndex: fileState.isLoading || fileState.processingFiles ? -1 : 0,\n              \"aria-label\": \"Upload files by dropping them here or press to select files\",\n              \"aria-disabled\": fileState.isLoading || fileState.processingFiles,\n              onKeyDown: handleFileInputKeyDown,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-icon-container\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"upload-icon\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  viewBox: \"0 0 24 24\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: \"2\",\n                    d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1211,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1210,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1209,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"upload-text\",\n                children: fileState.isLoading || fileState.processingFiles ? \"Please wait for the current upload to complete\" : \"Drag and Drop files to upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1214,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                type: \"file\",\n                accept: \".pdf,.doc,.docx\",\n                multiple: true,\n                onChange: handleFileChange,\n                className: \"hidden-input\",\n                disabled: fileState.isLoading || fileState.processingFiles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1219,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `browse-button ${fileState.isLoading || fileState.processingFiles ? 'disabled-button' : ''}`,\n                onClick: handleChooseFile,\n                disabled: fileState.isLoading || fileState.processingFiles,\n                children: fileState.isLoading || fileState.processingFiles ? \"Upload in Progress...\" : \"Browse Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1228,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"upload-subtext\",\n                children: \"Supports PDF, DOC, DOCX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"files-title\",\n          id: \"uploaded-files-heading\",\n          children: \"Uploaded Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 25\n        }, this), fileState.selectedFiles.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-files\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-files-text\",\n            children: \"No files uploaded yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1247,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1246,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"files-list\",\n          role: \"list\",\n          \"aria-labelledby\": \"uploaded-files-heading\",\n          children: fileState.selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-item\",\n            role: \"listitem\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-content\",\n              children: [getFileIcon(file.name), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"file-name\",\n                    title: file.name,\n                    children: file.name.length > 100 ? file.name.substring(0, 100) + '...' : file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1265,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => removeFile(index),\n                    className: \"delete-button\",\n                    \"aria-label\": `Remove file ${file.name}`,\n                    disabled: fileState.isLoading || fileState.processingFiles,\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      className: \"delete-icon\",\n                      fill: \"none\",\n                      stroke: \"currentColor\",\n                      viewBox: \"0 0 24 24\",\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: \"2\",\n                        d: \"M6 18L18 6M6 6l12 12\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1273,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1272,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1266,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1264,\n                  columnNumber: 49\n                }, this), fileState.isLoading && fileState.uploadProgress[file.name] !== undefined && fileState.uploadProgress[file.name] < 100 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar\",\n                    style: {\n                      width: `${fileState.uploadProgress[file.name]}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1279,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"progress-text\",\n                    children: [fileState.uploadProgress[file.name], \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1280,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1278,\n                  columnNumber: 53\n                }, this) : fileState.processingFiles && fileState.uploadProgress[file.name] === undefined && fileState.uploadQueue && fileState.uploadQueue.some(queueFile => queueFile.name === file.name) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"waiting-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"waiting-text\",\n                    children: \"Waiting to upload...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1284,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1283,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"file-size\",\n                  children: [(file.size / 1024).toFixed(1), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1287,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1263,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1261,\n              columnNumber: 41\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1256,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-submit-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFinalSubmit,\n            className: \"submit-button final-submit\",\n            disabled: fileState.isLoading || fileState.processingFiles || apiStatus === \"loading\",\n            children: fileState.isLoading || fileState.processingFiles ? 'Uploading Files...' : apiStatus === \"loading\" ? 'Submitting...' : 'Submit Job Details and CV'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1297,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1296,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1243,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 949,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadCV, \"ukVoWNVXnKD++7+YIQb2vOEUuyg=\");\n_c = UploadCV;\nexport default UploadCV;\nvar _c;\n$RefreshReg$(_c, \"UploadCV\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","fileUploadReducer","state","action","type","selectedFiles","payload","updatedFiles","uploadQueue","newQueue","processingFiles","uploadProgress","fileName","progress","isLoading","slice","fileToRemove","index","filter","_","i","queueFile","name","Object","fromEntries","entries","key","UploadCV","_s","fileState","fileDispatch","currentStep","setCurrentStep","jobData","setJobData","apiStatus","setApiStatus","submitProgress","setSubmitProgress","isDragging","setIsDragging","fileInputRef","uploadContainerRef","progressAnimationRef","jobTitle","setJobTitle","jobTitleSuggestions","setJobTitleSuggestions","showJobTitleSuggestions","setShowJobTitleSuggestions","jobDescription","setJobDescription","departments","setDepartments","departmentInput","setDepartmentInput","departmentSuggestions","setDepartmentSuggestions","showDepartmentSuggestions","setShowDepartmentSuggestions","minimumCGPA","setMinimumCGPA","cgpaInputValue","setCgpaInputValue","cgpaError","setCgpaError","skillInput","setSkillInput","skillSuggestions","setSkillSuggestions","showSkillSuggestions","setShowSkillSuggestions","skills","setSkills","jobTitleOptions","departmentOptions","skillsOptions","filtered","option","toLowerCase","includes","length","handleJobTitleSelect","selected","handleSkillSelect","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","processFiles","files","alert","newFiles","fileToProcess","extension","split","pop","validExtensions","console","log","existingIndex","findIndex","file","confirmReplace","window","confirm","push","map","f","some","newFile","processNextFile","Promise","resolve","interval","setInterval","Math","random","floor","clearInterval","setTimeout","uploadContainer","current","handleLocalDragOver","preventDefault","classList","add","handleLocalDragLeave","remove","handleLocalDrop","handleDocumentDragOver","handleDocumentDragLeave","clientX","clientY","innerWidth","innerHeight","handleDocumentDrop","Array","from","dataTransfer","handleFileChange","value","handleDragOver","dropEffect","handleDrop","handleFileInputKeyDown","e","click","removeFile","handleChooseFile","getFileIcon","className","children","_jsxFileName","lineNumber","columnNumber","getFullPageOverlay","handleAddSkill","trim","removeSkill","skill","s","handleSkillKeyPress","handleDepartmentSelect","department","handleAddDepartment","handleDepartmentKeyPress","removeDepartment","dept","validateForm","handleSubmit","jobDetails","requiredSkills","scrollTo","top","behavior","handleBackToJobDetails","updateSliderPercentage","API_URL","API_ENDPOINT","UPLOAD_MORE_CV_ENDPOINT","cancelAnimationFrame","LoadingAnimation","showSuccessModal","setShowSuccessModal","showErrorModal","setShowErrorModal","errorMessage","setErrorMessage","SuccessModal","role","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","id","onClick","handleCreateMoreJob","handleGoToDashboard","autoFocus","ErrorModal","cx","cy","r","x1","y1","x2","y2","handleTryAgain","location","href","handleFinalSubmit","formData","FormData","submissionData","append","JSON","stringify","forEach","lastUpdateTime","Date","now","simulateProgress","prev","newProgress","min","requestAnimationFrame","response","fetch","method","body","ok","errorData","json","catch","error","Error","status","detail","message","text","responseData","handleCGPAInputChange","inputValue","test","numValue","parseFloat","isNaN","handleCGPABlur","toFixed","handleCGPASliderChange","newValue","percentage","sliderElement","getElementById","style","setProperty","handleJobDescriptionInput","height","scrollHeight","handleUploadMoreCV","jobId","data","width","round","onSubmit","htmlFor","onChange","placeholder","required","onBlur","suggestion","onMouseDown","onInput","rows","onKeyPress","disabled","max","step","ref","onDragOver","onDrop","tabIndex","onKeyDown","accept","multiple","title","substring","undefined","size","_c","$RefreshReg$"],"sources":["C:/Users/ruizh/OneDrive/Desktop/EqualLens-project-1/equallens-project/src/components/pages/UploadCV.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo, useReducer } from \"react\";\r\nimport \"./UploadCV.css\";\r\nimport \"../pageloading.css\"; // Import the loading animation CSS\r\n\r\n// File upload reducer to manage file upload state more efficiently\r\nconst fileUploadReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_FILES':\r\n            return {\r\n                ...state,\r\n                selectedFiles: action.payload.updatedFiles,\r\n                uploadQueue: action.payload.newQueue,\r\n                processingFiles: true\r\n            };\r\n        case 'FILE_PROGRESS':\r\n            return {\r\n                ...state,\r\n                uploadProgress: {\r\n                    ...state.uploadProgress,\r\n                    [action.payload.fileName]: action.payload.progress\r\n                }\r\n            };\r\n        case 'PROCESS_NEXT':\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case 'FILE_COMPLETE':\r\n            return {\r\n                ...state,\r\n                uploadQueue: state.uploadQueue.slice(1)\r\n            };\r\n        case 'QUEUE_COMPLETE':\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                processingFiles: false\r\n            };\r\n        case 'REMOVE_FILE':\r\n            const fileToRemove = state.selectedFiles[action.payload.index];\r\n            return {\r\n                ...state,\r\n                selectedFiles: state.selectedFiles.filter((_, i) => i !== action.payload.index),\r\n                uploadQueue: fileToRemove ? \r\n                    state.uploadQueue.filter(queueFile => queueFile.name !== fileToRemove.name) : \r\n                    state.uploadQueue,\r\n                uploadProgress: fileToRemove ? \r\n                    // Remove the progress entry for this file\r\n                    Object.fromEntries(\r\n                        Object.entries(state.uploadProgress).filter(([key]) => key !== fileToRemove.name)\r\n                    ) : \r\n                    state.uploadProgress\r\n            };\r\n        case 'RESET':\r\n            return {\r\n                selectedFiles: [],\r\n                isLoading: false,\r\n                uploadProgress: {},\r\n                uploadQueue: [],\r\n                processingFiles: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst UploadCV = () => {\r\n    // Use reducer for file upload state management\r\n    const [fileState, fileDispatch] = useReducer(fileUploadReducer, {\r\n        selectedFiles: [],\r\n        isLoading: false,\r\n        uploadProgress: {},\r\n        uploadQueue: [],\r\n        processingFiles: false\r\n    });\r\n  \r\n    const [currentStep, setCurrentStep] = useState(\"jobDetails\"); // \"jobDetails\" or \"uploadCV\"\r\n    const [jobData, setJobData] = useState(null); // To store submitted job details\r\n    \r\n    // Add API state variables\r\n    const [apiStatus, setApiStatus] = useState(\"idle\"); // idle, loading, success, error\r\n    const [submitProgress, setSubmitProgress] = useState(0); // Track overall submission progress\r\n    \r\n    const [isDragging, setIsDragging] = useState(false); \r\n    const fileInputRef = useRef(null);\r\n    const uploadContainerRef = useRef(null);\r\n    \r\n    // Create animation frame reference at the component level\r\n    const progressAnimationRef = useRef(null);\r\n    \r\n    // Job details state\r\n    const [jobTitle, setJobTitle] = useState(\"\");\r\n    const [jobTitleSuggestions, setJobTitleSuggestions] = useState([]);\r\n    const [showJobTitleSuggestions, setShowJobTitleSuggestions] = useState(false);\r\n    const [jobDescription, setJobDescription] = useState(\"\");\r\n    const [departments, setDepartments] = useState([]);\r\n    const [departmentInput, setDepartmentInput] = useState(\"\");\r\n    const [departmentSuggestions, setDepartmentSuggestions] = useState([]);\r\n    const [showDepartmentSuggestions, setShowDepartmentSuggestions] = useState(false);\r\n    const [minimumCGPA, setMinimumCGPA] = useState(2.50);\r\n    const [cgpaInputValue, setCgpaInputValue] = useState(\"2.50\");\r\n    const [cgpaError, setCgpaError] = useState(false);\r\n    const [skillInput, setSkillInput] = useState(\"\");\r\n    const [skillSuggestions, setSkillSuggestions] = useState([]);\r\n    const [showSkillSuggestions, setShowSkillSuggestions] = useState(false);\r\n    const [skills, setSkills] = useState([]);\r\n\r\n    // Sample data for suggestions - wrapped in useMemo to avoid recreation on each render\r\n    const jobTitleOptions = useMemo(() => [\r\n        \"Software Engineer\", \"Data Scientist\", \"Project Manager\", \"Web Developer\", \r\n        \"UI/UX Designer\", \"Product Manager\", \"DevOps Engineer\", \"Systems Analyst\",\r\n        \"Frontend Developer\", \"Backend Developer\", \"Full Stack Developer\",\r\n        \"Machine Learning Engineer\", \"Business Analyst\", \"Quality Assurance Engineer\"\r\n    ], []);\r\n\r\n    const departmentOptions = useMemo(() => [\r\n        \"Engineering\", \"Information Technology\", \"Marketing\", \"Finance\", \"Human Resources\",\r\n        \"Sales\", \"Operations\", \"Customer Support\", \"Research & Development\", \"Legal\",\r\n        \"Administration\", \"Design\", \"Product Management\", \"Business Development\", \"Data Science\"\r\n    ], []);\r\n\r\n    const skillsOptions = useMemo(() => [\r\n        \"JavaScript\", \"Python\", \"Java\", \"React\", \"Node.js\", \"SQL\", \"AWS\", \"Docker\",\r\n        \"DevOps\", \"Machine Learning\", \"Data Analysis\", \"Agile\", \"Scrum\",\r\n        \"Project Management\", \"UI/UX Design\", \"TypeScript\", \"Go\", \"Ruby\", \r\n        \"Communication\", \"Leadership\", \"Problem Solving\", \"C#\", \"PHP\", \"Angular\",\r\n        \"Vue.js\", \"MongoDB\", \"GraphQL\", \"REST API\", \"Git\"\r\n    ], []);\r\n\r\n    // Filter suggestions based on input\r\n    useEffect(() => {\r\n        if (jobTitle) {\r\n            const filtered = jobTitleOptions.filter(\r\n                option => option.toLowerCase().includes(jobTitle.toLowerCase()) // Case-insensitive search\r\n            );\r\n            setJobTitleSuggestions(filtered);\r\n            setShowJobTitleSuggestions(filtered.length > 0);\r\n        } else {\r\n            setShowJobTitleSuggestions(false);\r\n        }\r\n    }, [jobTitle, jobTitleOptions]);\r\n\r\n    useEffect(() => {\r\n        if (departmentInput) {\r\n            const filtered = departmentOptions.filter(\r\n                option => option.toLowerCase().includes(departmentInput.toLowerCase())\r\n            );\r\n            setDepartmentSuggestions(filtered);\r\n            setShowDepartmentSuggestions(filtered.length > 0);\r\n        } else {\r\n            setShowDepartmentSuggestions(false);\r\n        }\r\n    }, [departmentInput, departmentOptions]);\r\n\r\n    useEffect(() => {\r\n        if (skillInput) {\r\n            const filtered = skillsOptions.filter(\r\n                option => option.toLowerCase().includes(skillInput.toLowerCase())\r\n            );\r\n            setSkillSuggestions(filtered);\r\n            setShowSkillSuggestions(filtered.length > 0);\r\n        } else {\r\n            setShowSkillSuggestions(false);\r\n        }\r\n    }, [skillInput, skillsOptions]);\r\n\r\n    // Selectors for job title and skills\r\n    const handleJobTitleSelect = (selected) => {\r\n        setJobTitle(selected);\r\n        setShowJobTitleSuggestions(false);\r\n    };\r\n\r\n    const handleSkillSelect = (selected) => {\r\n        if (!skills.includes(selected)) {\r\n            setSkills([...skills, selected]);\r\n        }\r\n        setSkillInput(\"\");\r\n        setShowSkillSuggestions(false);\r\n    };\r\n\r\n    // Close suggestions when clicking outside\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (!event.target.closest('.suggestion-container')) {\r\n                setShowJobTitleSuggestions(false);\r\n                setShowSkillSuggestions(false);\r\n                setShowDepartmentSuggestions(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    // Process files and add to queue - optimized with useCallback and useReducer\r\n    const processFiles = useCallback((files) => {\r\n        // If already processing files, don't allow new uploads\r\n        if (fileState.isLoading || fileState.processingFiles) {\r\n            alert(\"Please wait for the current file to complete uploading before adding new files.\");\r\n            return;\r\n        }\r\n        \r\n        let updatedFiles = [...fileState.selectedFiles];\r\n        let newFiles = [];\r\n        \r\n        // Process all files but upload one at a time\r\n        for (const fileToProcess of files) {\r\n            // Check file format\r\n            const extension = fileToProcess.name.split('.').pop().toLowerCase();\r\n            const validExtensions = ['pdf', 'doc', 'docx'];\r\n            \r\n            if (!validExtensions.includes(extension)) {\r\n                alert(`${fileToProcess.name} is not a supported file type. Please upload PDF, DOC, or DOCX files only.`);\r\n                continue;\r\n            }\r\n\r\n            // Check if file with same name exists - log for debugging\r\n            console.log(\"Checking for duplicate file:\", fileToProcess.name);\r\n            const existingIndex = updatedFiles.findIndex(file => file.name === fileToProcess.name);\r\n            console.log(\"Existing file index:\", existingIndex);\r\n            \r\n            if (existingIndex !== -1) {\r\n                // We need to use a synchronous approach here since we're in a loop\r\n                const confirmReplace = window.confirm(`A file named \"${fileToProcess.name}\" already exists. Do you want to replace it?`);\r\n                \r\n                if (confirmReplace) {\r\n                    console.log(\"Replacing file:\", fileToProcess.name);\r\n                    // Replace the file in our updated array\r\n                    updatedFiles[existingIndex] = fileToProcess;\r\n                    \r\n                    // Mark this file to be added to the queue\r\n                    newFiles.push(fileToProcess);\r\n                }\r\n            } else {\r\n                console.log(\"Adding new file:\", fileToProcess.name);\r\n                // New file, add it to both arrays\r\n                updatedFiles.push(fileToProcess);\r\n                newFiles.push(fileToProcess);\r\n            }\r\n        }\r\n\r\n        if (newFiles.length > 0) {\r\n            console.log(\"New files to process:\", newFiles.map(f => f.name));\r\n            // Filter out any files from the queue that are being replaced\r\n            const newQueue = [\r\n                ...fileState.uploadQueue.filter(queueFile => \r\n                    !newFiles.some(newFile => newFile.name === queueFile.name)\r\n                ),\r\n                ...newFiles\r\n            ];\r\n            \r\n            console.log(\"New upload queue:\", newQueue.map(f => f.name));\r\n            \r\n            fileDispatch({\r\n                type: 'ADD_FILES',\r\n                payload: { \r\n                    updatedFiles, \r\n                    newQueue \r\n                }\r\n            });\r\n        }\r\n    }, [fileState.selectedFiles, fileState.isLoading, fileState.processingFiles, fileState.uploadQueue]);\r\n\r\n    // Process upload queue sequentially\r\n    useEffect(() => {\r\n        if (fileState.uploadQueue.length === 0) {\r\n            if (fileState.processingFiles) {\r\n                fileDispatch({ type: 'QUEUE_COMPLETE' });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Process one file at a time\r\n        const processNextFile = async () => {\r\n            fileDispatch({ type: 'PROCESS_NEXT' });\r\n            const fileToProcess = fileState.uploadQueue[0];\r\n            \r\n            // Initialize progress for this file\r\n            fileDispatch({\r\n                type: 'FILE_PROGRESS', \r\n                payload: { fileName: fileToProcess.name, progress: 0 }\r\n            });\r\n\r\n            // Simulate upload for current file\r\n            await new Promise(resolve => {\r\n                let progress = 0;\r\n                const interval = setInterval(() => {\r\n                    progress += Math.random() * 15;\r\n                    if (progress > 100) progress = 100;\r\n\r\n                    fileDispatch({\r\n                        type: 'FILE_PROGRESS',\r\n                        payload: { fileName: fileToProcess.name, progress: Math.floor(progress) }\r\n                    });\r\n\r\n                    if (progress === 100) {\r\n                        clearInterval(interval);\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                        }, 500);\r\n                    }\r\n                }, 200);\r\n            });\r\n\r\n            // Remove processed file from queue\r\n            fileDispatch({ type: 'FILE_COMPLETE' });\r\n        };\r\n\r\n        processNextFile();\r\n    }, [fileState.uploadQueue, fileState.processingFiles]);\r\n\r\n    useEffect(() => {\r\n        const uploadContainer = uploadContainerRef.current;\r\n        \r\n        if (uploadContainer) {\r\n            const handleLocalDragOver = (event) => {\r\n                event.preventDefault();\r\n                uploadContainer.classList.add('dragover');\r\n            };\r\n\r\n            const handleLocalDragLeave = () => {\r\n                uploadContainer.classList.remove('dragover');\r\n            };\r\n\r\n            const handleLocalDrop = () => {\r\n                uploadContainer.classList.remove('dragover');\r\n            };\r\n\r\n            uploadContainer.addEventListener('dragover', handleLocalDragOver);\r\n            uploadContainer.addEventListener('dragleave', handleLocalDragLeave);\r\n            uploadContainer.addEventListener('drop', handleLocalDrop);\r\n\r\n            return () => {\r\n                uploadContainer.removeEventListener('dragover', handleLocalDragOver);\r\n                uploadContainer.removeEventListener('dragleave', handleLocalDragLeave);\r\n                uploadContainer.removeEventListener('drop', handleLocalDrop);\r\n            };\r\n        }\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        // Only add document-level event listeners when on the upload CV page\r\n        if (currentStep !== \"uploadCV\") return;\r\n\r\n        const handleDocumentDragOver = (event) => {\r\n            event.preventDefault();\r\n            if (!isDragging && !fileState.isLoading && !fileState.processingFiles) {\r\n                setIsDragging(true);\r\n            }\r\n        };\r\n\r\n        const handleDocumentDragLeave = (event) => {\r\n            event.preventDefault();\r\n            \r\n            if (event.clientX <= 0 || event.clientY <= 0 || \r\n                event.clientX >= window.innerWidth || event.clientY >= window.innerHeight) {\r\n                setIsDragging(false);\r\n            }\r\n        };\r\n\r\n        const handleDocumentDrop = (event) => {\r\n            event.preventDefault();\r\n            setIsDragging(false);\r\n            \r\n            // Prevent file drop during loading\r\n            if (fileState.isLoading || fileState.processingFiles) {\r\n                alert(\"Please wait for the current file to complete uploading before adding new files.\");\r\n                return;\r\n            }\r\n            \r\n            const files = Array.from(event.dataTransfer.files);\r\n            if (files.length > 0) {\r\n                processFiles(files);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('dragover', handleDocumentDragOver);\r\n        document.addEventListener('dragleave', handleDocumentDragLeave);\r\n        document.addEventListener('drop', handleDocumentDrop);\r\n\r\n        return () => {\r\n            document.removeEventListener('dragover', handleDocumentDragOver);\r\n            document.removeEventListener('dragleave', handleDocumentDragLeave);\r\n            document.removeEventListener('drop', handleDocumentDrop);\r\n        };\r\n    }, [isDragging, processFiles, fileState.isLoading, fileState.processingFiles, currentStep]); // Add currentStep to dependencies\r\n\r\n    const handleFileChange = (event) => {\r\n        const files = Array.from(event.target.files);\r\n        if (files.length > 0) {\r\n            processFiles(files);\r\n            // Reset the file input so the same file can be selected again\r\n            event.target.value = '';\r\n        }\r\n    };\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n        // Only show dragover effect if not currently loading\r\n        if (!fileState.isLoading && !fileState.processingFiles) {\r\n            event.dataTransfer.dropEffect = 'copy';\r\n        } else {\r\n            // Use 'none' to indicate dropping is not allowed\r\n            event.dataTransfer.dropEffect = 'none';\r\n        }\r\n    };\r\n\r\n    const handleDrop = (event) => {\r\n        event.preventDefault();\r\n        setIsDragging(false);\r\n        \r\n        // Prevent file drop during loading\r\n        if (fileState.isLoading || fileState.processingFiles) {\r\n            alert(\"Please wait for the current file to complete uploading before adding new files.\");\r\n            return;\r\n        }\r\n        \r\n        const files = Array.from(event.dataTransfer.files);\r\n        if (files.length > 0) {\r\n            processFiles(files);\r\n        }\r\n    };\r\n\r\n    // Add this function to fix the error\r\n    const handleFileInputKeyDown = (e) => {\r\n        // Activate file input on Enter or Space\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n            e.preventDefault();\r\n            fileInputRef.current.click();\r\n        }\r\n    };\r\n\r\n    // Improved file remove function using reducer\r\n    const removeFile = (index) => {\r\n        fileDispatch({\r\n            type: 'REMOVE_FILE',\r\n            payload: { index }\r\n        });\r\n    };\r\n\r\n    const handleChooseFile = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    const getFileIcon = (fileName) => {\r\n        const extension = fileName.split('.').pop().toLowerCase();\r\n\r\n        switch (extension) {\r\n            case 'pdf':\r\n                return <div className=\"file-icon pdf-icon\">PDF</div>;\r\n            case 'doc':\r\n            case 'docx':\r\n                return <div className=\"file-icon doc-icon\">DOC</div>;\r\n            default:\r\n                return <div className=\"file-icon default-icon\">FILE</div>;\r\n        }\r\n    };\r\n\r\n    const getFullPageOverlay = () => {\r\n        if (!isDragging) return null;\r\n        \r\n        return (\r\n            <div className=\"fullpage-drop-overlay\">\r\n                <div className=\"drop-content\">\r\n                    <div className=\"file-preview\">\r\n                        <div className=\"file-icon-large pdf-icon-large\">FILE</div>\r\n                        {fileState.selectedFiles.length > 0 && <div className=\"copy-badge\">Copy</div>}\r\n                    </div>\r\n                    <h2 className=\"drop-title\">Drop files anywhere</h2>\r\n                    <p className=\"drop-subtitle\">Drop file(s) to upload it</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Job details handlers\r\n    const handleAddSkill = () => {\r\n        if (skillInput.trim() && !skills.includes(skillInput.trim())) {\r\n            setSkills([...skills, skillInput.trim()]);\r\n            setSkillInput(\"\");\r\n        }\r\n    };\r\n\r\n    const removeSkill = (skill) => {\r\n        setSkills(skills.filter(s => s !== skill));\r\n    };\r\n\r\n    const handleSkillKeyPress = (e) => {\r\n        if (e.key === 'Enter' && skillInput.trim()) {\r\n            e.preventDefault();\r\n            handleAddSkill();\r\n        }\r\n    };\r\n\r\n    // Department handlers\r\n    const handleDepartmentSelect = (department) => {\r\n        if (!departments.includes(department)) {\r\n            setDepartments([...departments, department]);\r\n        }\r\n        setDepartmentInput(\"\");\r\n        setShowDepartmentSuggestions(false);\r\n    };\r\n\r\n    const handleAddDepartment = () => {\r\n        if (departmentInput.trim() && !departments.includes(departmentInput.trim())) {\r\n            setDepartments([...departments, departmentInput.trim()]);\r\n            setDepartmentInput(\"\");\r\n        }\r\n    };\r\n    \r\n    const handleDepartmentKeyPress = (e) => {\r\n        if (e.key === 'Enter' && departmentInput.trim()) {\r\n            e.preventDefault();\r\n            handleAddDepartment();\r\n        }\r\n    };\r\n\r\n    const removeDepartment = (department) => {\r\n        setDepartments(departments.filter(dept => dept !== department));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        if (!jobTitle.trim()) {\r\n            alert(\"Job Title is required\");\r\n            return false;\r\n        }\r\n        \r\n        if (skills.length === 0) {\r\n            alert(\"At least one Required Skill is required\");\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    };\r\n\r\n    // When submitting the form, make sure we're using requiredSkills consistently\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validateForm()) {\r\n            // Save job details and move to next step\r\n            const jobDetails = {\r\n                jobTitle,\r\n                jobDescription,\r\n                departments,\r\n                minimumCGPA,\r\n                skills: skills, // Keep skills field for backward compatibility\r\n                requiredSkills: skills // Add requiredSkills explicitly for API consistency\r\n            };\r\n            \r\n            console.log(\"Job details saved:\", jobDetails);\r\n            setJobData(jobDetails);\r\n            setCurrentStep(\"uploadCV\");\r\n            \r\n            // Scroll to top of the page\r\n            window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    // Add handler for going back to job details\r\n    const handleBackToJobDetails = () => {\r\n        setCurrentStep(\"jobDetails\");\r\n        // Scroll to top of the page\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        // Reapply slider fill percentage to fix CGPA slider color issue\r\n        setTimeout(() => {\r\n            updateSliderPercentage(minimumCGPA);\r\n        }, 100);\r\n    };\r\n\r\n    // API URL for backend\r\n    const API_URL = \"http://localhost:8000\"; // Your FastAPI URL\r\n    const API_ENDPOINT = `${API_URL}/api/jobs/upload-job`; // Ensure the correct endpoint is used\r\n    const UPLOAD_MORE_CV_ENDPOINT = `${API_URL}/api/jobs/upload-more-cv`; // Add endpoint for upload-more-cv\r\n\r\n    // Clean up animation frame on component unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            if (progressAnimationRef.current) {\r\n                cancelAnimationFrame(progressAnimationRef.current);\r\n                progressAnimationRef.current = null;\r\n            }\r\n        };\r\n    }, []);\r\n    \r\n    // Updated LoadingAnimation component with cleaner structure\r\n    const LoadingAnimation = () => {\r\n        return (\r\n            <div className=\"loading-animation\">\r\n                <div className=\"seesaw-container\">\r\n                    <div className=\"bar\"></div>\r\n                    <div className=\"ball\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Add state for managing success and error modals\r\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    // Success Modal Component with improved accessibility\r\n    const SuccessModal = () => (\r\n        <div \r\n            className=\"status-modal-overlay\" \r\n            role=\"dialog\"\r\n            aria-modal=\"true\"\r\n            aria-labelledby=\"success-modal-title\"\r\n        >\r\n            <div className=\"status-modal success-modal\">\r\n                <div className=\"status-icon success-icon\" aria-hidden=\"true\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                        <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n                        <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n                    </svg>\r\n                </div>\r\n                <h3 id=\"success-modal-title\" className=\"status-title\">Submission Complete!</h3>\r\n                <p className=\"status-description\">\r\n                    <strong>Your files have been uploaded successfully</strong>\r\n                </p>\r\n                <div className=\"status-buttons\">\r\n                    <button \r\n                        className=\"status-button secondary-button\" \r\n                        onClick={handleCreateMoreJob}\r\n                    >\r\n                        Create More Job\r\n                    </button>\r\n                    <button \r\n                        className=\"status-button primary-button\" \r\n                        onClick={handleGoToDashboard}\r\n                        autoFocus\r\n                    >\r\n                        Go to Dashboard\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    // Error Modal Component with improved accessibility\r\n    const ErrorModal = () => (\r\n        <div \r\n            className=\"status-modal-overlay\"\r\n            role=\"dialog\"\r\n            aria-modal=\"true\"\r\n            aria-labelledby=\"error-modal-title\"\r\n        >\r\n            <div className=\"status-modal error-modal\">\r\n                <div className=\"status-icon error-icon\" aria-hidden=\"true\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                        <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\r\n                        <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\r\n                    </svg>\r\n                </div>\r\n                <h3 id=\"error-modal-title\" className=\"status-title\">Submission Failed!</h3>\r\n                <p className=\"status-message\">{errorMessage || \"Please try again\"}</p>\r\n                <div className=\"status-buttons\">\r\n                    <button \r\n                        className=\"status-button primary-button\" \r\n                        onClick={handleTryAgain}\r\n                        autoFocus\r\n                    >\r\n                        Try Again\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    // Button action handlers with full reset\r\n    // const handleUploadMoreJobs = () => {\r\n    //     // Reset all form and file states\r\n    //     setCurrentStep(\"jobDetails\");\r\n    //     setJobTitle(\"\");\r\n    //     setJobDescription(\"\");\r\n    //     setDepartments([]);\r\n    //     setMinimumCGPA(2.50);\r\n    //     setSkills([]);\r\n    //     setJobData(null);\r\n    //     fileDispatch({ type: 'RESET' });\r\n    //     setApiStatus(\"idle\");\r\n    //     setSubmitProgress(0);\r\n    //     setShowSuccessModal(false);\r\n    // };\r\n    \r\n    const handleGoToDashboard = () => {\r\n        // Close the modal first\r\n        setShowSuccessModal(false);\r\n        \r\n        // Navigate to dashboard page\r\n        window.location.href = \"/dashboard\";\r\n        \r\n        // If you're using React Router, you could use navigate instead:\r\n        // navigate(\"/dashboard\");\r\n    };\r\n    \r\n    const handleTryAgain = () => {\r\n        setShowErrorModal(false);\r\n        // Reset API state for retrying\r\n        setApiStatus(\"idle\");\r\n        setSubmitProgress(0);\r\n    };\r\n\r\n    // Update the handleFinalSubmit function to use modals instead of alerts\r\n    const handleFinalSubmit = async () => {\r\n        if (!fileState.selectedFiles || fileState.selectedFiles.length === 0) {\r\n            setErrorMessage(\"Please upload at least one CV file\");\r\n            setShowErrorModal(true);\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            // Cancel any existing animation frame\r\n            if (progressAnimationRef.current) {\r\n                cancelAnimationFrame(progressAnimationRef.current);\r\n                progressAnimationRef.current = null;\r\n            }\r\n            \r\n            setApiStatus(\"loading\");\r\n            setSubmitProgress(0); // Start with 0% progress \r\n            \r\n            // Add a small delay to ensure loading animation starts properly\r\n            await new Promise(resolve => setTimeout(resolve, 400));\r\n            \r\n            // Create form data with both skills and requiredSkills fields\r\n            const formData = new FormData();\r\n            \r\n            // Add job data as JSON string with both field names to ensure compatibility\r\n            const submissionData = {\r\n                ...jobData,\r\n                // Ensure both field names are present\r\n                skills: jobData.skills || [],\r\n                requiredSkills: jobData.requiredSkills || jobData.skills || []\r\n            };\r\n            \r\n            formData.append(\"job_data\", JSON.stringify(submissionData));\r\n\r\n            // Add all files\r\n            fileState.selectedFiles.forEach(file => {\r\n                formData.append(\"files\", file);\r\n            });\r\n            \r\n            // Simulate early progress before actual upload starts\r\n            setSubmitProgress(7);\r\n\r\n            await new Promise(resolve => setTimeout(resolve, 2750));\r\n\r\n            setSubmitProgress(16);\r\n\r\n            await new Promise(resolve => setTimeout(resolve, 5450));\r\n            \r\n            \r\n            // Simulate some more progress before sending\r\n            setSubmitProgress(30);\r\n\r\n            await new Promise(resolve => setTimeout(resolve, 5450));\r\n\r\n            setSubmitProgress(65);\r\n            \r\n            // Function to simulate progress during waiting time - use requestAnimationFrame for smoother updates\r\n            let lastUpdateTime = Date.now();\r\n            const simulateProgress = () => {\r\n                if (apiStatus !== \"loading\") return; // Stop if no longer loading\r\n                \r\n                const now = Date.now();\r\n                // Only update every 800ms to reduce rendering load\r\n                if (now - lastUpdateTime >= 800) {\r\n                    setSubmitProgress(prev => {\r\n                        const newProgress = prev + (Math.random() * 1.5);\r\n                        return Math.min(newProgress, 90);\r\n                    });\r\n                    lastUpdateTime = now;\r\n                }\r\n                progressAnimationRef.current = requestAnimationFrame(simulateProgress);\r\n            };\r\n            \r\n            // Start progress simulation with requestAnimationFrame\r\n            progressAnimationRef.current = requestAnimationFrame(simulateProgress);\r\n            \r\n            // Send to backend API\r\n            const response = await fetch(API_ENDPOINT, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            \r\n            // Clear the progress simulation\r\n            if (progressAnimationRef.current) {\r\n                cancelAnimationFrame(progressAnimationRef.current);\r\n                progressAnimationRef.current = null;\r\n            }\r\n            \r\n            if (!response.ok) {\r\n                const errorData = await response.json().catch(() => ({ error: \"Unknown error\" }));\r\n                throw new Error(`Server responded with ${response.status}: ${errorData.detail || errorData.error || errorData.message || await response.text()}`);\r\n            }\r\n            \r\n            const responseData = await response.json();\r\n            console.log(\"Server response:\", responseData);\r\n            \r\n            // Set the final progress based on response (or 100 if not provided)\r\n            setSubmitProgress(responseData.progress || 100);\r\n            \r\n            // Add a delay to ensure animation completes nicely\r\n            setTimeout(() => {\r\n                setApiStatus(\"success\");\r\n                \r\n                setShowSuccessModal(true);\r\n            }, 1000);\r\n            \r\n        } catch (error) {\r\n            // Clear animation frame in case of error too\r\n            if (progressAnimationRef.current) {\r\n                cancelAnimationFrame(progressAnimationRef.current);\r\n                progressAnimationRef.current = null;\r\n            }\r\n            \r\n            console.error(\"Error submitting job:\", error);\r\n            setApiStatus(\"error\");\r\n            setErrorMessage(error.message || \"Error submitting job. Please try again.\");\r\n            setShowErrorModal(true);\r\n            \r\n            // Reset API status after a short delay\r\n            setTimeout(() => {\r\n                setApiStatus(\"idle\");\r\n                setSubmitProgress(0);\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    // Handle direct CGPA input\r\n    const handleCGPAInputChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        \r\n        // Allow empty field while typing\r\n        if (inputValue === \"\") {\r\n            setCgpaInputValue(\"\");\r\n            setCgpaError(true);\r\n            return;\r\n        }\r\n        \r\n        // Only allow numeric input with decimal point\r\n        if (!/^\\d*\\.?\\d*$/.test(inputValue)) {\r\n            return;\r\n        }\r\n        \r\n        setCgpaInputValue(inputValue);\r\n        \r\n        // Validate the input value\r\n        const numValue = parseFloat(inputValue);\r\n        if (!isNaN(numValue) && numValue >= 0 && numValue <= 4) {\r\n            setMinimumCGPA(numValue);\r\n            setCgpaError(false);\r\n            // Update the slider's fill percentage for direct input\r\n            updateSliderPercentage(numValue);\r\n        } else {\r\n            setCgpaError(true);\r\n        }\r\n    };\r\n    \r\n    // Handle when input field loses focus\r\n    const handleCGPABlur = () => {\r\n        // If the input is invalid or empty, reset to the current valid CGPA\r\n        if (cgpaError || cgpaInputValue === \"\") {\r\n            setCgpaInputValue(minimumCGPA.toFixed(2));\r\n            setCgpaError(false);\r\n        }\r\n        // Format the value with 2 decimal places when focus is lost\r\n        else {\r\n            setCgpaInputValue(parseFloat(cgpaInputValue).toFixed(2));\r\n        }\r\n    };\r\n    \r\n    // Update input value when slider changes\r\n    const handleCGPASliderChange = (e) => {\r\n        const newValue = parseFloat(e.target.value);\r\n        setMinimumCGPA(newValue);\r\n        setCgpaInputValue(newValue.toFixed(2));\r\n        setCgpaError(false);\r\n        \r\n        // Update the slider's fill percentage\r\n        updateSliderPercentage(newValue);\r\n    };\r\n\r\n    // Helper function to update the slider fill percentage CSS variable\r\n    const updateSliderPercentage = (value) => {\r\n        // Calculate percentage (value from 0-4 to 0-100%)\r\n        const percentage = (value / 4) * 100;\r\n        // Find the slider element and update its CSS variable\r\n        const sliderElement = document.getElementById('cgpa');\r\n        if (sliderElement) {\r\n            sliderElement.style.setProperty('--slider-percentage', `${percentage}%`);\r\n        }\r\n    };\r\n\r\n    // Initialize the slider percentage when component mounts\r\n    useEffect(() => {\r\n        updateSliderPercentage(minimumCGPA);\r\n    }, [minimumCGPA]);\r\n\r\n    // Add auto-resize function for the job description textarea\r\n    const handleJobDescriptionInput = (e) => {\r\n        e.target.style.height = \"auto\";\r\n        e.target.style.height = `${e.target.scrollHeight}px`;\r\n    };\r\n\r\n    // Add this new function for creating more jobs\r\n    const handleCreateMoreJob = () => {\r\n        // Reset the form and navigate back to job details\r\n        setCurrentStep(\"jobDetails\");\r\n        setJobTitle(\"\");\r\n        setJobDescription(\"\");\r\n        setDepartments([]);\r\n        setMinimumCGPA(2.50);\r\n        setSkills([]);\r\n        setJobData(null);\r\n        fileDispatch({ type: 'RESET' });\r\n        setApiStatus(\"idle\");\r\n        setSubmitProgress(0);\r\n        setShowSuccessModal(false);\r\n    };\r\n\r\n    // Example usage for upload-more-cv\r\n    const handleUploadMoreCV = async (jobId, files) => {\r\n        const formData = new FormData();\r\n        formData.append(\"job_id\", jobId);\r\n        files.forEach(file => formData.append(\"files\", file));\r\n\r\n        try {\r\n            const response = await fetch(UPLOAD_MORE_CV_ENDPOINT, {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Server responded with ${response.status}: ${await response.text()}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"Upload more CV response:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error uploading more CVs:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            {getFullPageOverlay()}\r\n            \r\n            {apiStatus === \"loading\" && (\r\n                <div className=\"api-loading-overlay\">\r\n                    <div className=\"api-loading-content\">\r\n                        {/* Keep the original loading animation from pageloading.css */}\r\n                        <LoadingAnimation />\r\n                        <p>Submitting job and uploading files...</p>\r\n                        {/* Progress bar positioned below the animation */}\r\n                        <div className=\"progress-bar-container\">\r\n                            <div \r\n                                className=\"progress-bar\" \r\n                                style={{ width: `${submitProgress}%` }}\r\n                            ></div>\r\n                            <span className=\"progress-text\">{Math.round(submitProgress)}%</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n            {/* Render success and error modals */}\r\n            {showSuccessModal && <SuccessModal />}\r\n            {showErrorModal && <ErrorModal />}\r\n            \r\n            {currentStep === \"jobDetails\" ? (\r\n                <div className=\"job-container\">\r\n                    <h3 className=\"job-title-header\">Create New Job</h3>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"jobTitle\" className=\"form-label\">Job Title <span className=\"required\">*</span></label>\r\n                            <div className=\"suggestion-container\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"jobTitle\"\r\n                                    className=\"form-input\"\r\n                                    value={jobTitle}\r\n                                    onChange={(e) => setJobTitle(e.target.value)}\r\n                                    placeholder=\"Enter job title\"\r\n                                    required\r\n                                    onBlur={() => {\r\n                                        // Hide suggestions with a small delay to allow click event to complete\r\n                                        setTimeout(() => {\r\n                                            setShowJobTitleSuggestions(false);\r\n                                        }, 200);\r\n                                    }}\r\n                                />\r\n                                {showJobTitleSuggestions && (\r\n                                    <ul className=\"suggestions-list\">\r\n                                        {jobTitleSuggestions.map((suggestion, index) => (\r\n                                            <li \r\n                                                key={index} \r\n                                                onMouseDown={(e) => {\r\n                                                    e.preventDefault(); // Prevent input blur before click\r\n                                                    handleJobTitleSelect(suggestion);\r\n                                                }}\r\n                                            >\r\n                                                {suggestion}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"jobDescription\" className=\"form-label\">Description</label>\r\n                            <textarea\r\n                                id=\"jobDescription\"\r\n                                className=\"form-textarea\"\r\n                                value={jobDescription}\r\n                                onChange={(e) => setJobDescription(e.target.value)}\r\n                                onInput={handleJobDescriptionInput} // Added auto-resize handler\r\n                                placeholder=\"Enter job description\"\r\n                                rows=\"4\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"department\" className=\"form-label\">Department</label>\r\n                            <div className=\"suggestion-container\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"department\"\r\n                                        className=\"form-input\"\r\n                                        value={departmentInput}\r\n                                        onChange={(e) => setDepartmentInput(e.target.value)}\r\n                                        onKeyPress={handleDepartmentKeyPress}\r\n                                        placeholder=\"Enter a department\"\r\n                                        onBlur={() => {\r\n                                            // Hide suggestions with a small delay to allow click event to complete\r\n                                            setTimeout(() => {\r\n                                                setShowDepartmentSuggestions(false);\r\n                                            }, 200);\r\n                                        }}\r\n                                    />\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"add-button\"\r\n                                        onClick={handleAddDepartment}\r\n                                        disabled={!departmentInput.trim()}\r\n                                    >\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                                {showDepartmentSuggestions && (\r\n                                    <ul className=\"suggestions-list\">\r\n                                        {departmentSuggestions.map((suggestion, index) => (\r\n                                            <li \r\n                                                key={index} \r\n                                                onMouseDown={(e) => {\r\n                                                    e.preventDefault(); // Prevent input blur before click\r\n                                                    handleDepartmentSelect(suggestion);\r\n                                                }}\r\n                                            >\r\n                                                {suggestion}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                            {departments.length > 0 && (\r\n                                <div className=\"tags-container\">\r\n                                    {departments.map((department, index) => (\r\n                                        <div key={index} className=\"tag\">\r\n                                            {department}\r\n                                            <button \r\n                                                type=\"button\"\r\n                                                className=\"tag-remove\"\r\n                                                onClick={() => removeDepartment(department)}\r\n                                            >\r\n                                                ×\r\n                                            </button>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"cgpa\" className=\"form-label\">Minimum CGPA</label>\r\n                            <div className=\"cgpa-container\">\r\n                                <input\r\n                                    type=\"range\"\r\n                                    id=\"cgpa\"\r\n                                    min=\"0\"\r\n                                    max=\"4\"\r\n                                    step=\"0.01\"\r\n                                    value={minimumCGPA}\r\n                                    onChange={handleCGPASliderChange}\r\n                                    className=\"cgpa-slider\"\r\n                                    aria-valuemin=\"0\"\r\n                                    aria-valuemax=\"4\"\r\n                                    aria-valuenow={minimumCGPA}\r\n                                    aria-labelledby=\"cgpa-value\"\r\n                                />\r\n                                <input\r\n                                    id=\"cgpa-value\"\r\n                                    type=\"text\"\r\n                                    className={`cgpa-value ${cgpaError ? 'error' : ''}`}\r\n                                    value={cgpaInputValue}\r\n                                    onChange={handleCGPAInputChange}\r\n                                    onBlur={handleCGPABlur}\r\n                                    aria-label=\"CGPA value\"\r\n                                    aria-invalid={cgpaError}\r\n                                />\r\n                            </div>\r\n                            {cgpaError && (\r\n                                <p className=\"error-message\" role=\"alert\">\r\n                                    Please enter a valid CGPA between 0 and 4\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"skills\" className=\"form-label\">Required Skills <span className=\"required\">*</span></label>\r\n                            <div className=\"suggestion-container\">\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"skills\"\r\n                                        className=\"form-input\"\r\n                                        value={skillInput}\r\n                                        onChange={(e) => setSkillInput(e.target.value)}\r\n                                        onKeyPress={handleSkillKeyPress}\r\n                                        placeholder=\"Enter a skill\"\r\n                                    />\r\n                                    <button \r\n                                        type=\"button\" \r\n                                        className=\"add-button\"\r\n                                        onClick={handleAddSkill}\r\n                                        disabled={!skillInput.trim()}\r\n                                    >\r\n                                        Add\r\n                                    </button>\r\n                                </div>\r\n                                {showSkillSuggestions && (\r\n                                    <ul className=\"suggestions-list\">\r\n                                        {skillSuggestions.map((suggestion, index) => (\r\n                                            <li \r\n                                                key={index} \r\n                                                onClick={() => handleSkillSelect(suggestion)}\r\n                                            >\r\n                                                {suggestion}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                            {skills.length > 0 && (\r\n                                <div className=\"tags-container\">\r\n                                    {skills.map((skill, index) => (\r\n                                        <div key={index} className=\"tag\">\r\n                                            {skill}\r\n                                            <button \r\n                                                type=\"button\"\r\n                                                className=\"tag-remove\"\r\n                                                onClick={() => removeSkill(skill)}\r\n                                            >\r\n                                                ×\r\n                                            </button>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"form-actions\">\r\n                            <button type=\"submit\" className=\"submit-button\">Next</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"step-header\">\r\n                        <div className=\"step-nav\">\r\n                            <button onClick={handleBackToJobDetails} className=\"back-button\">\r\n                                <svg className=\"back-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\"></path>\r\n                                </svg>\r\n                                Back to Job Details \r\n                            </button>\r\n                        </div>\r\n                        <h3 className=\"job-title-header\">Upload Candidate CVs for {jobData?.jobTitle}</h3>\r\n                    </div>\r\n                    \r\n                    <div className=\"upload-container\" ref={uploadContainerRef}>\r\n                        <div className=\"upload-card\">\r\n                            <div className=\"upload-dropzone-container\">\r\n                                <div\r\n                                    className={`upload-dropzone ${(fileState.isLoading || fileState.processingFiles) ? 'disabled-dropzone' : ''}`}\r\n                                    onDragOver={handleDragOver}\r\n                                    onDrop={handleDrop}\r\n                                    role=\"button\"\r\n                                    tabIndex={fileState.isLoading || fileState.processingFiles ? -1 : 0}\r\n                                    aria-label=\"Upload files by dropping them here or press to select files\"\r\n                                    aria-disabled={fileState.isLoading || fileState.processingFiles}\r\n                                    onKeyDown={handleFileInputKeyDown}\r\n                                >\r\n                                    <div className=\"upload-icon-container\">\r\n                                        <svg className=\"upload-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"></path>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <p className=\"upload-text\">\r\n                                        {(fileState.isLoading || fileState.processingFiles) \r\n                                            ? \"Please wait for the current upload to complete\" \r\n                                            : \"Drag and Drop files to upload\"}\r\n                                    </p>\r\n                                    <input\r\n                                        ref={fileInputRef}\r\n                                        type=\"file\"\r\n                                        accept=\".pdf,.doc,.docx\"\r\n                                        multiple\r\n                                        onChange={handleFileChange}\r\n                                        className=\"hidden-input\"\r\n                                        disabled={fileState.isLoading || fileState.processingFiles}\r\n                                    />\r\n                                    <button\r\n                                        className={`browse-button ${(fileState.isLoading || fileState.processingFiles) ? 'disabled-button' : ''}`}\r\n                                        onClick={handleChooseFile}\r\n                                        disabled={fileState.isLoading || fileState.processingFiles}\r\n                                    >\r\n                                        {(fileState.isLoading || fileState.processingFiles) \r\n                                            ? \"Upload in Progress...\" \r\n                                            : \"Browse Files\"}\r\n                                    </button>\r\n                                    <p className=\"upload-subtext\">Supports PDF, DOC, DOCX</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"files-container\">\r\n                        <h3 className=\"files-title\" id=\"uploaded-files-heading\">Uploaded Files</h3>\r\n                        {fileState.selectedFiles.length === 0 ? (\r\n                            <div className=\"no-files\">\r\n                                <p className=\"no-files-text\">No files uploaded yet</p>\r\n                            </div>\r\n                        ) : (\r\n                            <div \r\n                                className=\"files-list\"\r\n                                role=\"list\"\r\n                                aria-labelledby=\"uploaded-files-heading\"\r\n                            >\r\n                                {fileState.selectedFiles.map((file, index) => (\r\n                                    <div \r\n                                        key={index} \r\n                                        className=\"file-item\"\r\n                                        role=\"listitem\"\r\n                                    >\r\n                                        <div className=\"file-content\">\r\n                                            {getFileIcon(file.name)}\r\n                                            <div className=\"file-details\">\r\n                                                <div className=\"file-header\">\r\n                                                    <p className=\"file-name\" title={file.name}>{file.name.length > 100 ? file.name.substring(0, 100) + '...' : file.name}</p>\r\n                                                    <button\r\n                                                        onClick={() => removeFile(index)}\r\n                                                        className=\"delete-button\"\r\n                                                        aria-label={`Remove file ${file.name}`}\r\n                                                        disabled={fileState.isLoading || fileState.processingFiles}\r\n                                                    >\r\n                                                        <svg className=\"delete-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                                                        </svg>\r\n                                                    </button>\r\n                                                </div>\r\n                                                {fileState.isLoading && fileState.uploadProgress[file.name] !== undefined && fileState.uploadProgress[file.name] < 100 ? (\r\n                                                    <div className=\"progress-bar-container\">\r\n                                                        <div className=\"progress-bar\" style={{ width: `${fileState.uploadProgress[file.name]}%` }}></div>\r\n                                                        <span className=\"progress-text\">{fileState.uploadProgress[file.name]}%</span>\r\n                                                    </div>\r\n                                                ) : fileState.processingFiles && fileState.uploadProgress[file.name] === undefined && fileState.uploadQueue && fileState.uploadQueue.some(queueFile => queueFile.name === file.name) ? (\r\n                                                    <div className=\"waiting-container\">\r\n                                                        <p className=\"waiting-text\">Waiting to upload...</p>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <p className=\"file-size\">{(file.size / 1024).toFixed(1)} KB</p>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        \r\n                        <div className=\"final-submit-container\">\r\n                            <button \r\n                                onClick={handleFinalSubmit} \r\n                                className=\"submit-button final-submit\"\r\n                                disabled={fileState.isLoading || fileState.processingFiles || apiStatus === \"loading\"}\r\n                            >\r\n                                {fileState.isLoading || fileState.processingFiles ? 'Uploading Files...' : \r\n                                 apiStatus === \"loading\" ? 'Submitting...' : 'Submit Job Details and CV'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadCV;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}